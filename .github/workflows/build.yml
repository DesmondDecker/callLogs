name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Install Android build-tools
      run: |
        sdkmanager "build-tools;34.0.0"
        sdkmanager "platforms;android-33"
        sdkmanager "platform-tools"
        
    - name: Ensure build-tools in expected location
      run: |
        BUILD_TOOLS_PATH=$HOME/.buildozer/android/platform/android-sdk/build-tools
        if [ ! -d "$BUILD_TOOLS_PATH" ]; then
          ANDROID_SDK_ROOT=$(dirname $(dirname $(which sdkmanager)))
          mkdir -p "$BUILD_TOOLS_PATH"
          if [ -d "$ANDROID_SDK_ROOT/build-tools/34.0.0" ]; then
            cp -r "$ANDROID_SDK_ROOT/build-tools/34.0.0" "$BUILD_TOOLS_PATH/"
            echo "✅ Copied build-tools to Buildozer expected location"
          else
            echo "❌ Source build-tools not found at $ANDROID_SDK_ROOT/build-tools/34.0.0"
            ls -la "$ANDROID_SDK_ROOT/build-tools/" || echo "build-tools directory not found"
          fi
        else
          echo "✅ Build-tools already exist in expected location"
        fi
      
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install buildozer cython
        
    - name: Create buildozer.spec if not exists
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: Cache Buildozer directory in project
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-project-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-project-
          
    - name: Build APK with Buildozer
      run: |
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
        echo "ANDROID_HOME=$ANDROID_HOME"
        ls -la $ANDROID_SDK_ROOT/build-tools/ || echo "No build-tools found"
        buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: kortahun-united-debug-${{ github.sha }}
        path: bin/*.apk
        
    - name: Upload APK to release (if release event)
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}