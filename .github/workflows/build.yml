name: Build Android APK

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0
        
    - name: Cache buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-global-
          
    - name: Cache buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          buildozer-${{ hashFiles('buildozer.spec') }}-
          buildozer-
          
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          unzip \
          openjdk-17-jdk \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          ccache
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        
    - name: Setup Android environment variables
      run: |
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64" >> $GITHUB_ENV
        
    - name: Verify buildozer configuration
      run: |
        buildozer android clean || true
        buildozer --version
        
    - name: Build APK (Debug)
      run: |
        buildozer android debug
        
    - name: Build APK (Release) for tags
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        buildozer android release
        
    - name: Sign APK (Release)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        # Use dummy keystore for demo - replace with your actual signing key
        keytool -genkey -v -keystore release.keystore -alias callsync -keyalg RSA -keysize 2048 -validity 10000 \
          -dname "CN=CallSync, OU=Dev, O=YourOrg, L=City, S=State, C=US" \
          -storepass android -keypass android
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
          -keystore release.keystore -storepass android \
          bin/callsync-*-release-unsigned.apk callsync
        $ANDROID_HOME/build-tools/33.0.0/zipalign -v 4 \
          bin/callsync-*-release-unsigned.apk \
          bin/callsync-release-signed.apk
          
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: callsync-debug-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: callsync-release-apk
        path: bin/callsync-release-signed.apk
        retention-days: 90
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/callsync-release-signed.apk
          bin/*-debug.apk
        generate_release_notes: true
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY
        echo "- **APK Location**: \`bin/\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        if [ -f "bin/callsync-*-debug.apk" ]; then
          echo "- **Debug APK**: $(ls bin/callsync-*-debug.apk)" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -f "bin/callsync-release-signed.apk" ]; then
          echo "- **Release APK**: callsync-release-signed.apk" >> $GITHUB_STEP_SUMMARY
        fi